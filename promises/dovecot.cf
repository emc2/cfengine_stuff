# Bundle to manage a dovecot mail server configuration, which gets
# users from LDAP and authenticates them with kerberos.
#
# The server uses GSSAPI to authenticate to the LDAP server and client
# certificates for SSL.
bundle agent dovecot
{
  vars:
    freebsd::
      # Dovecot config dir
      "dovecot_conf_dir" string => "/usr/local/etc/dovecot";
      # Set rc.conf variable to enable dovecot
      "rc_conf[dovecot_enable]" string => "YES";
      # Dovecot user name
      "dovecot_user_name" string => "dovecot";
      # Dovecot user groupname
      "dovecot_user_group" string => "dovecot";
      # Dovecot user uid
      "dovecot_user_uid" string => "143";
      # Dovecot user gid
      "dovecot_user_gid" string => "143";
      # Dovecot login user name
      "dovecot_login_name" string => "dovenull";
      # Dovecot login group name
      "dovecot_login_group" string => "dovenull";
      # Dovecot login user uid
      "dovecot_login_uid" string => "144";
      # Dovecot login user gid
      "dovecot_login_gid" string => "144";

    any::
      # The dovecot user info
      "user[$(dovecot_user_name)][uid]" string => "$(dovecot_user_uid)";
      "user[$(dovecot_user_name)][gid]" string => "$(dovecot_user_group)";
      "user[$(dovecot_user_name)][fullname]" string => "Dovecot user";
      "user[$(dovecot_user_name)][home]" string => "$(base_config.empty_dir)";
      "user[$(dovecot_user_name)][shell]" string => "$(base_config.nologin_shell)";
      "user[$(dovecot_user_name)][flags]" string => "-G mail";
      "user[$(dovecot_login_name)][uid]" string => "$(dovecot_login_uid)";
      "user[$(dovecot_login_name)][gid]" string => "$(dovecot_login_group)";
      "user[$(dovecot_login_name)][fullname]" string => "Dovecot login";
      "user[$(dovecot_login_name)][home]" string => "$(base_config.empty_dir)";
      "user[$(dovecot_login_name)][shell]" string => "$(base_config.nologin_shell)";
      "user[$(dovecot_login_name)][flags]" string => "";

      # The govecot group info
      "group[$(dovecot_user_group)][gid]" string => "$(dovecot_user_gid)";
      "group[$(dovecot_user_group)][flags]" string => "";
      "group[$(dovecot_login_group)][gid]" string => "$(dovecot_login_gid)";
      "group[$(dovecot_login_group)][flags]" string => "";

      # Filename for dovecot configuration file
      "dovecot_conf_file" string => "dovecot.conf";
      # Path to dovecot configuration file
      "dovecot_conf_path" string => "$(dovecot_conf_dir)/$(dovecot_conf_file)";

      # Filename for ldap configuration file
      "dovecot_ldap_conf_file" string => "dovecot-ldap.conf";
      # Path to ldap configuration file
      "dovecot_ldap_conf_path" string => "$(dovecot_conf_dir)/$(dovecot_ldap_conf_file)";

      # dovecot kerberos credential.  This is used both for
      # authentication with clients, as well as for authentication
      # with the LDAP database.
      "dovecot_cred" string => "dovecot/$(sys.fqhost)";
      # NSS keytab file
      "dovecot_keytab_file" string => "dovecot.keytab";
      # Path to NSS keytab
      "dovecot_keytab_path" string => "$(kerberos_config.keytabs_dir)/$(dovecot_keytab_file)";

      # A crontab entry to refresh the kerberos credentials every 8 hours
      "dovecot_crontab_entry" string => "0       */8     *       *       *       dovecot   /usr/bin/kinit -t $(dovecot_keytab_path) $(dovecot_cred)";

      # The client certificate used by dovecot to talk to LDAP
      "dovecot_internal_cert_file" string => "$(sys.uqhost)-dovecot-ldap-cert.pem";
      "dovecot_internal_cert_path" string => "$(base_config.cert_files_path)/$(dovecot_internal_cert_file)";

      # The client key used by dovecot to talk to LDAP
      "dovecot_internal_key_file" string => "$(sys.uqhost)-dovecot-ldap-key.pem";
      "dovecot_internal_key_path" string => "$(base_config.key_files_path)/$(dovecot_internal_key_file)";

      # The certificate used by dovecot to talk to clients
      "dovecot_external_cert_file" string => "imap-cert.pem";
      "dovecot_external_cert_path" string => "$(base_config.cert_files_path)/$(dovecot_external_cert_file)";

      # The key used by dovecot to talk to clients
      "dovecot_external_key_file" string => "imap-key.pem";
      "dovecot_external_key_path" string => "$(base_config.key_files_path)/$(dovecot_external_key_file)";

  files:
      # Set up a crontab entry to refresh the kerberos credentials
      # every 8 hours (by default, they expire in 10 hours, so this is
      # ok).
      "$(base_config.system_crontab)"
      create => "false",
      edit_line => append_if_no_line("$(dovecot_crontab_entry)"),
      comment => "Set crontab entry to refresh dovecot credentials periodically",
      classes => if_repaired("set_dovecot_crontab");

      # Create dovecot configuration directory
      "$(dovecot_conf_dir)/."
      create => "true",
      perms => m("755"),
      comment => "Create dovecot configuration directory",
      classes => if_repaired("create_dovecot_conf_dir");

      # Set LDAP configuation variables
      "$(dovecot_ldap_conf_path)"
      create => "true",
      perms => m("644"),
      edit_template => "$(sys.workdir)/inputs/promises/dovecot-ldap.conf.template",
      comment => "Set LDAP configuration variables in dovecot LDAP configuration file",
      classes => if_repaired("set_dovecot_ldap_vars");

      # Set dovecot configuation variables
      "$(dovecot_conf_path)"
      create => "true",
      perms => m("644"),
      edit_template => "$(sys.workdir)/inputs/promises/dovecot.conf.template",
      comment => "Set LDAP configuration variables in dovecot LDAP configuration file",
      classes => if_repaired("set_dovecot_vars");

      # Make sure the keytab has the right permissions
      "$(dovecot_keytab_path)"
      create => "false",
      perms => mog("600", "dovecot", "dovecot"),
      comment => "Set permission of dovecot keytab",
      classes => if_repaired("dovecot_keytab_wrong_perms");

      # Copy the dovecot-to-LDAP certificate file from the policy host
      "$(dovecot_internal_cert_path)"
      create => "true",
      perms => mog("644", "dovecot", "dovecot"),
      copy_from => secure_cp("$(base_config.file_store)/$(sys.uqhost)/$(dovecot_internal_cert_file)",
                             "$(sys.policy_hub)"),
      comment => "Copy dovecot-to-LDAP certificate file",
      classes => if_repaired("dovecot_internal_cert");

      # Copy the dovecot-to-LDAP key file from the policy host
      "$(dovecot_internal_key_path)"
      create => "true",
      perms => mog("600", "dovecot", "dovecot"),
      copy_from => secure_cp("$(base_config.file_store)/$(sys.uqhost)/$(dovecot_internal_key_file)",
                             "$(sys.policy_hub)"),
      comment => "Copy dovecot-to-LDAP key file",
      classes => if_repaired("dovecot_internal_key");

      # Copy the server certificate file from the policy host
      "$(dovecot_external_cert_path)"
      create => "true",
      perms => mog("644", "dovecot", "dovecot"),
      copy_from => secure_cp("$(base_config.file_store)/$(sys.uqhost)/$(dovecot_external_cert_file)",
                             "$(sys.policy_hub)"),
      comment => "Copy dovecot-to-LDAP certificate file",
      classes => if_repaired("dovecot_external_cert");

      # Copy the server key file from the policy host
      "$(dovecot_external_key_path)"
      create => "true",
      perms => mog("600", "dovecot", "dovecot"),
      copy_from => secure_cp("$(base_config.file_store)/$(sys.uqhost)/$(dovecot_external_key_file)",
                             "$(sys.policy_hub)"),
      comment => "Copy dovecot-to-LDAP key file",
      classes => if_repaired("dovecot_external_key");

    freebsd::
      # Make sure the nslcd daemon is turned on
      "/etc/rc.conf"
      create => "true",
      perms => mog("644", "root", "wheel"),
      edit_line => set_variable_values("dovecot.rc_conf"),
      comment => "Enable dovecot in rc.conf",
      classes => if_repaired("enable_dovecot_rc_conf");

  methods:
      # Create dovecot group
      "dovecot_group" usebundle => create_local_groups("dovecot.group");

      # Create dovecot user
      "dovecot_user" usebundle => create_local_users("dovecot.user");

  services:
      # Start the dovecot service
      "dovecot"
      service_policy => "start",
      service_method => nonstandard_service;

      # Reload the dovecot config files if they were updated
    set_dovecot_ldap_vars|set_dovecot_vars::
      "dovecot"
      service_policy => "reload",
      service_method => nonstandard_service;

      # Restart the dovecot server if the keys change
    dovecot_internal_key|dovecot_internal_cert|dovecot_external_key|dovecot_external_cert::
      "dovecot"
      service_policy => "restart",
      service_method => nonstandard_service;

  reports:
    dovecot_internal_key::
      "Copied dovecot-to-LDAP SSL key";

    dovecot_internal_cert::
      "Copied dovecot-to-LDAP SSL certificate";

    dovecot_external_key::
      "Copied dovecot server SSL key";

    dovecot_external_cert::
      "Copied dovecot server SSL certificate";

    set_dovecot_crontab::
      "Set crontab entry to refresh dovecot credentials periodically";

    set_dovecot_ldap_vars::
      "Set LDAP configuration variables in $(dovecot_ldap_conf_path)";

    create_dovecot_conf_dir::
      "Created dovecot configuration directory";

    set_dovecot_vars::
      "Set configuration variables in $(dovecot_conf_path)";

    dovecot_keytab_wrong_perms::
      "Set permissions on $(dovecot_keytab_path).  WARNING: Keytab had wrong permissions; possible data breach!";

    enable_dovecot_rc_conf::
      "Enabled dovecot in rc.conf";
}
