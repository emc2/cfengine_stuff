# This is the central point for managing configuration promises and
# selecting which ones apply to a given server.
bundle common host_config
{
  vars:
      # The domain name for all servers
      "domain" string => "metricspace.net";

      # The jenkins master server
      "jenkins_master" string => "tachyon";

      # The PostgreSQL database server
      "postgresql_server" string => "higgs";

      # Clients for globally-controlled LDAP+Kerberos authentication.
      # These clients get Kerberized/LDAPized NSS and PAM.  Note: a
      # lot of the rest of this configuration assumes these bundles
      # are run.
      "global_auth_clients" slist => { "proton",
                                       # Dovecot needs PAM
                                       "mail",
                                       "tachyon",
                                       "neutrino"
                                     };

      # Clients for global authentication that don't allow logins.
      # PAM is not installed on these.
      "nologin_global_auth_clients" slist => { "www" };

      # Clients for global authentication with no logins and no nss
      # support.
      "nonss_global_auth_clients" slist => { "xmpp" };

  classes:
      # Set this machine up as an ssh server (meaning it runs sshd).
      #
      # Note: on FreeBSD, the default key size needs to get turned up
      "ssh_server" or => { "tachyon",
                           "proton"
                         };

      # Set this machine up as a kerberos server machine.
      "kerberos_server" expression => "kdc";
      # Set this machine up as an LDAP server machine.
      "ldap_server" expression => "ldap";

      # Set these machines up as users of kerberos authentication.
      "kerberos_client" or => { "kdc",
                                "ldap",
                                "$(postgresql_server)",
                                @(nonss_global_auth_clients),
                                @(nologin_global_auth_clients),
                                @(global_auth_clients)
                              };

      # Set these machines up as LDAP clients.
      "ldap_client" or => { "ldap",
                            @(nonss_global_auth_clients),
                            @(nologin_global_auth_clients),
                            @(global_auth_clients)
                          };

      # Set up an LDAP server
      "ldap_server" expression => "ldap";

      # Set up LDAP-based NSS on these machines.
      "nslcd" or => { @(nologin_global_auth_clients),
                      @(global_auth_clients)
                    };

      # Set up kerberos-based saslauthd.
      "sasl" or => { @(global_auth_clients) };

      # Set up kerberos-based PAM authentication.
      "pam" or => { @(global_auth_clients) };

      # Set up a PostgreSQL client installation.
      "postgresql_client" or => { "www",
                                  "$(postgresql_server)",
                                  "xmpp",
                                  "$(jenkins_master)"
                                };

      # Set up the PostgreSQL server.
      "postgresql_server" expression => "$(postgresql_server)";

      # Set up a mail server running dovecot and postfix.
      "mail_server" expression => "mail";

      # Set up an apache server.
      "apache_server" expression => "www";

      # Set up a tomcat instance.
      "tomcat_server" or => { "www",
                              "$(jenkins_master)"
                            };

      # Set up an xmpp server running openfire.
      "xmpp_server" expression => "xmpp";

      # Set up a server running two wikis
      "xwiki_server" expression => "www";

      # Set up a server running a jenkins master
      "jenkins_master" expression => "$(jenkins_master)";
}

bundle common master_config 
{
  vars:
      # EVERYBODY gets their ssh client updated...
      "ssh_client_bundles" slist => { "ssh_client" };

    # These are lists of bundles to be run for each option.  Most of
    # the time an option isn't chosen, nothing is done.
    #
    # We do this as bundle-lists, so that we can write bundles that do
    # one thing, and don't have to worry about the master
    # configuration.
    ssh_server::
      "ssh_server_bundles" slist => { "ssh_server" };

    !ssh_server::
      "ssh_server_bundles" slist => { "no_ssh_server" };

    kerberos_client::
      "kerberos_client_bundles" slist => { "kerberos_client" };

    !kerberos_client::
      "kerberos_client_bundles" slist => {};

    kerberos_server::
      "kerberos_server_bundles" slist => { "kerberos_server" };

    !kerberos_server::
      "kerberos_server_bundles" slist => {};

    ldap_client::
      "ldap_client_bundles" slist => { "ldap_client" };

    !ldap_client::
      "ldap_client_bundles" slist => {};

    ldap_server::
      "ldap_server_bundles" slist => { "ldap_server" };

    !ldap_server::
      "ldap_server_bundles" slist => {};

    pam::
      "pam_bundles" slist => { "pam" };

    !pam::
      "pam_bundles" slist => {};

    nslcd::
      "nslcd_bundles" slist => { "nslcd" };

    !nslcd::
      "nslcd_bundles" slist => {};

    # Nothing to do for postgresql clients for now...
    postgresql_client::
      "postgresql_client_bundles" slist => {};

    !postgresql_client::
      "postgresql_client_bundles" slist => {};

    postgresql_server::
      "postgresql_server_bundles" slist => { "postgresql_server" };

    !postgresql_server::
      "postgresql_server_bundles" slist => {};

    mail_server::
      "mail_server_bundles" slist => { "dovecot", "postfix" };

    !mail_server::
      "mail_server_bundles" slist => {};

    xmpp_server::
      "xmpp_server_bundles" slist => { "openfire" };

    !xmpp_server::
      "xmpp_server_bundles" slist => {};

    apache_server::
      "apache_server_bundles" slist => { "apache" };

    !apache_server::
      "apache_server_bundles" slist => {};

    tomcat_server::
      "tomcat_server_bundles" slist => { "tomcat" };

    !tomcat_server::
      "tomcat_server_bundles" slist => {};

    jenkins_master::
      "jenkins_bundles" slist => {};

    !jenkins_master&jenkins_slave::
      "jenkins_bundles" slist => {};

    !jenkins_master&!jenkins_slave::
      "jenkins_bundles" slist => {};

    freebsd::
      "os_bundles" slist => { "src_conf_disable_junk" };

    macos::
      "os_bundles" slist => {};

    any::
      # List of all input files for promise bundles we use.
      "inputs" slist => { "promises/base_config.cf",
                          "promises/ca_cert.cf",
                          "promises/src_conf.cf",
                          "promises/ssh.cf",
                          "promises/nslcd.cf",
                          "promises/pam.cf",
                          "promises/kerberos.cf",
                          "promises/ldap.cf",
                          "promises/postgresql.cf",
                          "promises/mail.cf",
                          "promises/dovecot.cf",
                          "promises/postfix.cf",
                          "promises/openfire.cf",
                          "promises/apache.cf",
                          "promises/tomcat.cf"
                        };

      # This is the master list of bundles that will be run.  We
      # always install the CA certificate.  Beyond that, we run any
      # OS-specific bundles, then start running the service specific
      # bundle lists.
      "bundles" slist => { "ca_cert",
                           @(os_bundles),
                           @(ssh_client_bundles),
                           @(ssh_server_bundles),
                           @(kerberos_client_bundles),
                           @(kerberos_server_bundles),
                           @(ldap_client_bundles),
                           @(ldap_server_bundles),
                           @(nslcd_bundles),
                           @(pam_bundles),
                           @(postgresql_client_bundles),
                           @(postgresql_server_bundles),
                           @(mail_server_bundles),
                           @(xmpp_server_bundles),
                           @(apache_server_bundles),
                           @(tomcat_server_bundles),
                           @(jenkins_bundles)
                         };

  # Set classes that will be observed by the individual bundles.
  classes:
      # Need the java keystore for these
      "ca_keystore" or => { "tomcat_server",
                            "xmpp_server"
                          };
}
