# Manage an nslcd configuration
bundle agent nslcd
{
  vars:
      # NSS certificate file
      "nslcd_cert_file" string "$(sys.uqhost)-cert.pem";
      # NSS key file
      "nslcd_key_file" string "$(sys.uqhost)-cert.pem";
      # Path to NSS certificate file
      "nslcd_cert_path" string => "$(base_config.cert_files_path)/$(nslcd_cert_file)";
      # Path to NSS key file
      "nslcd_key_path" string => "$(base_config.key_files_path)/$(nslcd_key_file)";
      # NSS kerberos credential
      # need to switch this over to nss/hostname
      "nslcd_cred" string => "nss/$(sys.fqhost)"
      # NSS keytab file
      "nslcd_keytab_file" string => "nss.keytab"
      # Path to NSS keytab
      "nslcd_keytab_path" string => "$(kerberos_config.keytabs_path)/$(nslcd_keytab_file)"
      # The kerberos credential to use
      "nslcd_cred" string => "nss/$(sys.fqhost)"
      # A crontab entry to refresh the kerberos credentials every 8 hours
      "nslcd_crontab_entry" string => "0       */8     *       *       *       nslcd   /usr/bin/kinit -t $(nslcd_keytab_path) $(nslcd_cred)";

    freebsd::
      "nslcd_conf_path" string => "/usr/local/etc/nslcd.conf";

  files:
      # Set basic configuration variables in nslcd.conf
      "$(nslcd_conf_path)"
      create => "true",
      perms => m("600"),
      edit_template => "$(sys.workdir)/inputs/promises/nslcd.conf.template",
      comment => "Set nslcd configuration vars",
      classes => if_repaired("edit_nslcd_conf");

      # Set up a crontab entry to refresh the kerberos credentials
      # every 8 hours (by default, they expire in 10 hours, so this is
      # ok).
      "$(base_config.system_crontab)"
      create => "false",
      edit_line => append_if_no_line("$(nslcd_crontab_entry)"),
      comment => "Set crontab entry to refresh nslcd credentials periodically",
      classes => if_repaired("set_nslcd_crontab");

  reports:
    edit_nslcd_conf::
      "Set configuration variables in $(nslcd_conf_path)";

    set_nslcd_crontab::
      "Set crontab entry to refresh nslcd credentials periodically";
}
