# Bundle to manage a postfix configuration, which gets users and
# aliases from LDAP, and uses Kerberos for authentication.
#
# The server uses GSSAPI to authenticate to the LDAP server and client
# certificates for SSL.
bundle agent postfix
{
  vars:
    freebsd::
      "postfix_conf_dir" string => "/usr/local/etc/postfix";
      "queue_dir" string => "/var/spool/postfix";
      "command_dir" string => "/usr/local/sbin";
      "daemon_dir" string => "/usr/local/libexec/postfix";
      "data_dir" string => "/var/db/postfix";
      "postfix_user" string => "postfix";
      "postfix_group" string => "postfix";
      "postfix_uid" string => "125";
      "postfix_gid" string => "125";

      "rc_conf[sendmail_enable]" string => "NO";
      "rc_conf[sendmail_submit_enable]" string => "NO";
      "rc_conf[sendmail_outbound_enable]" string => "NO";
      "rc_conf[sendmail_map_queue_enable]" string => "NO";
      "rc_conf[postfix_enable]" string => "YES";
      "rc_conf[postfix_krb5_ktname]" string => "$(postfix.postfix_keytab_path)";

      "mailbox_command" string => "/usr/local/libexec/dovecot/dovecot-lda -f \"$SENDER\" -a \"$RECIPIENT\"";
      "sendmail_path" string => "/usr/local/sbin/sendmail";
      "newaliases_path" string => "/usr/local/bin/newaliases";
      "mailq_path" string => "/usr/local/bin/mailq";

    any::
      # The postfix user info
      "user[$(postfix_user)][uid]" string => "$(postfix_uid)";
      "user[$(postfix_user)][gid]" string => "$(postfix_group)";
      "user[$(postfix_user)][fullname]" string => "postfix mail server";
      "user[$(postfix_user)][home]" string => "$(queue_dir)";
      "user[$(postfix_user)][shell]" string => "$(base_config.nologin_shell)";
      "user[$(postfix_user)][flags]" string => "-G mail";

      # The postfix group info
      "group[$(postfix_group)][gid]" string => "$(postfix_gid)";
      "group[$(postfix_group)][flags]" string => "";

      # Filename for ldap configuration file
      "postfix_master_cf_file" string => "master.cf";
      # Path to ldap configuration file
      "postfix_master_cf_path" string => "$(postfix_conf_dir)/$(postfix_master_cf_file)";

      # Filename for ldap configuration file
      "postfix_main_cf_file" string => "main.cf";
      # Path to ldap configuration file
      "postfix_main_cf_path" string => "$(postfix_conf_dir)/$(postfix_main_cf_file)";

      # Filename for ldap configuration file
      "postfix_master_cf_file" string => "master.cf";
      # Path to ldap configuration file
      "postfix_master_cf_path" string => "$(postfix_conf_dir)/$(postfix_master_cf_file)";

      # Filename for ldap configuration file
      "postfix_ldap_cf_file" string => "postfix-ldap.cf";
      # Path to ldap configuration file
      "postfix_ldap_cf_path" string => "$(postfix_conf_dir)/$(postfix_ldap_cf_file)";

      # Postfix kerberos credential.  This is used both for
      # authentication with clients, as well as for authentication
      # with the LDAP database.
      "postfix_cred" string => "postfix/$(sys.fqhost)";
      # NSS keytab file
      "postfix_keytab_file" string => "postfix.keytab";
      # Path to postfix keytab
      "postfix_keytab_path" string => "$(kerberos_config.keytabs_dir)/$(postfix_keytab_file)";

      # A crontab entry to refresh the kerberos credentials every 8 hours
      "postfix_crontab_entry" string => "0       */8     *       *       *       postfix   /usr/bin/kinit -t $(postfix_keytab_path) $(postfix_cred)";

      # The client certificate used by postfix to talk to LDAP
      "postfix_internal_cert_file" string => "$(sys.uqhost)-postfix-ldap-cert.pem";
      "postfix_internal_cert_path" string => "$(base_config.cert_files_path)/$(postfix_internal_cert_file)";

      # The client key used by postfix to talk to LDAP
      "postfix_internal_key_file" string => "$(sys.uqhost)-postfix-ldap-key.pem";
      "postfix_internal_key_path" string => "$(base_config.key_files_path)/$(postfix_internal_key_file)";

      # The client certificate used by postfix to talk to clients
      "postfix_external_cert_file" string => "smtp-cert.pem";
      "postfix_external_cert_path" string => "$(base_config.cert_files_path)/$(postfix_external_cert_file)";

      # The client key used by postfix to talk to clients
      "postfix_external_key_file" string => "smtp-key.pem";
      "postfix_external_key_path" string => "$(base_config.key_files_path)/$(postfix_external_key_file)";

  files:
      # Create postfix configuration directory
      "$(postfix_conf_dir)/."
      create => "true",
      perms => m("755"),
      comment => "Create postfix configuration directory",
      classes => if_repaired("create_postfix_conf_dir");

      # Set LDAP configuation variables
      "$(postfix_ldap_cf_path)"
      create => "true",
      perms => m("644"),
      edit_template => "$(sys.workdir)/inputs/promises/postfix-ldap.cf.template",
      comment => "Set LDAP configuration variables in postfix LDAP configuration file",
      classes => if_repaired("set_postfix_ldap_vars");

      # Set configuation variables
      "$(postfix_main_cf_path)"
      create => "true",
      perms => m("644"),
      edit_template => "$(sys.workdir)/inputs/promises/postfix-main.cf.template",
      comment => "Set postfix configuration variables",
      classes => if_repaired("set_postfix_main_vars");

      # Set configuation variables
      "$(postfix_master_cf_path)"
      create => "true",
      perms => m("644"),
      edit_template => "$(sys.workdir)/inputs/promises/postfix-master.cf.template",
      comment => "Set postfix master process configuration",
      classes => if_repaired("set_postfix_master_cf");

      # Set up a crontab entry to refresh the kerberos credentials
      # every 8 hours (by default, they expire in 10 hours, so this is
      # ok).
      "$(base_config.system_crontab)"
      create => "false",
      edit_line => append_if_no_line("$(postfix_crontab_entry)"),
      comment => "Set crontab entry to refresh postfix credentials periodically",
      classes => if_repaired("set_postfix_crontab");

      # Make sure the keytab has the right permissions
      "$(postfix_keytab_path)"
      create => "false",
      perms => mog("600", "postfix", "postfix"),
      comment => "Set permission of postfix keytab",
      classes => if_repaired("postfix_keytab_wrong_perms");

      # Copy the postfix-to-LDAP certificate file from the policy host
      "$(postfix_internal_cert_path)"
      create => "true",
      perms => mog("644", "postfix", "postfix"),
      copy_from => secure_cp("$(base_config.file_store)/$(sys.uqhost)/$(postfix_internal_cert_file)",
                             "$(sys.policy_hub)"),
      comment => "Copy postfix-to-LDAP certificate file",
      classes => if_repaired("postfix_internal_cert");

      # Copy the postfix-to-LDAP key file from the policy host
      "$(postfix_internal_key_path)"
      create => "true",
      perms => mog("600", "postfix", "postfix"),
      copy_from => secure_cp("$(base_config.file_store)/$(sys.uqhost)/$(postfix_internal_key_file)",
                             "$(sys.policy_hub)"),
      comment => "Copy postfix-to-LDAP key file",
      classes => if_repaired("postfix_internal_key");

      # Copy the server certificate file from the policy host
      "$(postfix_external_cert_path)"
      create => "true",
      perms => mog("644", "postfix", "postfix"),
      copy_from => secure_cp("$(base_config.file_store)/$(sys.uqhost)/$(postfix_external_cert_file)",
                             "$(sys.policy_hub)"),
      comment => "Copy external SSL certificate file",
      classes => if_repaired("postfix_external_cert");

      # Copy the server key file from the policy host
      "$(postfix_external_key_path)"
      create => "true",
      perms => mog("600", "postfix", "postfix"),
      copy_from => secure_cp("$(base_config.file_store)/$(sys.uqhost)/$(postfix_external_key_file)",
                             "$(sys.policy_hub)"),
      comment => "Copy external SSL key file",
      classes => if_repaired("postfix_external_key");

    freebsd::
      # Make sure the nslcd daemon is turned on
      "/etc/rc.conf"
      create => "true",
      perms => mog("644", "root", "wheel"),
      edit_line => set_variable_values("postfix.rc_conf"),
      comment => "Enable postfix in rc.conf",
      classes => if_repaired("enable_postfix_rc_conf");

  methods:
      # Create postfix group
      "postfix_group" usebundle => create_local_groups("postfix.group");

      # Create postfix user
      "postfix_user" usebundle => create_local_users("postfix.user");

  services:
      # Start the postfix service
      "postfix"
      service_policy => "start",
      service_method => nonstandard_service;

      # Reload the postfix config files if they were updated
    set_postfix_ldap_vars|set_postfix_main_vars|set_postfix_master_cf::
      "postfix"
      service_policy => "reload",
      service_method => nonstandard_service;

      # Restart the postfix server if the keys change
    postfix_internal_key|postfix_internal_cert|postfix_external_key|postfix_external_cert::
      "postfix"
      service_policy => "restart",
      service_method => nonstandard_service;

  reports:
    postfix_internal_key::
      "Copied postfix-to-LDAP SSL key";

    postfix_internal_cert::
      "Copied postfix-to-LDAP SSL certificate";

    postfix_external_key::
      "Copied postfix server SSL key";

    postfix_external_cert::
      "Copied postfix server SSL certificate";

    set_postfix_crontab::
      "Set crontab entry to refresh postfix credentials periodically";

    create_postfix_conf_dir::
      "Created postfix configuration directory";

    enable_postfix_rc_conf::
      "Enabled postfix in rc.conf";

    set_postfix_ldap_vars::
      "Set postfix LDAP configuration variables in $(postfix_ldap_cf_path)";

    set_postfix_main_vars::
      "Set postfix configuration variables in $(postfix_main_cf_path)";

    set_postfix_master_cf::
      "Setup postfix process configuration in $(postfix_master_cf_path)";

}
